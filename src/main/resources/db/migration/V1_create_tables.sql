-- V1__create_tables.sql

CREATE TABLE medicamentos (
  ID_MEDICAMENTOS INT PRIMARY KEY AUTO_INCREMENT,
  NOMBRE_MEDICAMENTOS VARCHAR(45) NOT NULL,
  DESCRIPCION_MEDICAMENTOS VARCHAR(45) NOT NULL,
  IMAGEN_MEDICAMENTO VARCHAR(255) NOT NULL
);

CREATE TABLE inventario (
  id_inventario BIGINT PRIMARY KEY AUTO_INCREMENT,
  FECHA_ENTRADA_INVENTARIO DATETIME NOT NULL,
  FECHA_SALIDA_INVENTARIO DATETIME NOT NULL,
  ID_MEDICAMENTOS INT NOT NULL,
  STOCK_INVENTARIO INT NOT NULL,
  VENCIMIENTOMED_INVENTARIO DATE NOT NULL,
  ESTADOMED_INVENTARIO ENUM('ACTIVO','INACTIVO') NOT NULL,
  FOREIGN KEY (ID_MEDICAMENTOS) REFERENCES medicamentos(ID_MEDICAMENTOS)
);

CREATE TABLE roles (
  ID_ROLES INT PRIMARY KEY AUTO_INCREMENT,
  NOMBRE_ROL VARCHAR(45) NOT NULL
);

CREATE TABLE usuarios (
  ID_USUARIOS INT PRIMARY KEY AUTO_INCREMENT,
  NOMBRE_USUARIOS VARCHAR(255),
  TIPODOC_USUARIOS ENUM('CC','TI') NOT NULL,
  NUMDOC_USUARIOS VARCHAR(255),
  DIRECCION_USUARIOS VARCHAR(255),
  ESTADO_USUARIO ENUM('ACTIVO','INACTIVO') DEFAULT 'ACTIVO',
  TELEFONO_USUARIOS VARCHAR(255),
  CORREO_USUARIOS VARCHAR(255),
  CONTRASEÃ‘A_USUARIOS VARCHAR(300) NOT NULL,
  ID_ROLES_USUARIOS INT NOT NULL,
  FOREIGN KEY (ID_ROLES_USUARIOS) REFERENCES roles(ID_ROLES)
);

CREATE TABLE control (
  id_control BIGINT PRIMARY KEY AUTO_INCREMENT,
  FECHA_INICIO_TRATAMIENTO DATETIME NOT NULL,
  FECHA_FIN_TRATAMIENTO DATETIME NOT NULL,
  problema_salud VARCHAR(255),
  cantidad_medic VARCHAR(255),
  frecuencia_medic VARCHAR(255),
  ALARMA_CONTROL TIME NOT NULL,
  ID_USUARIO INT NOT NULL,
  ID_MEDICAMENTOS INT NOT NULL,
  FOREIGN KEY (ID_USUARIO) REFERENCES usuarios(ID_USUARIOS),
  FOREIGN KEY (ID_MEDICAMENTOS) REFERENCES medicamentos(ID_MEDICAMENTOS)
);

CREATE TABLE ordenes (
  ID_ORDENES INT PRIMARY KEY AUTO_INCREMENT,
  FECHA_ENTREGA DATETIME NOT NULL,
  eps_orden VARCHAR(255),
  estado_orden VARCHAR(255),
  USUARIOS_PACIENTE INT NOT NULL,
  CANTIDADMED_ORDEN INT NOT NULL,
  direccion_orden VARCHAR(255),
  telefono_orden VARCHAR(255),
  FOREIGN KEY (USUARIOS_PACIENTE) REFERENCES usuarios(ID_USUARIOS)
);

CREATE TABLE ordenes_has_medicamentos (
  ID_MEDICAMENTO_POR_ORDEN INT PRIMARY KEY AUTO_INCREMENT,
  ID_ORDENES INT NOT NULL,
  ID_MEDICAMENTOS INT NOT NULL,
  FOREIGN KEY (ID_ORDENES) REFERENCES ordenes(ID_ORDENES) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (ID_MEDICAMENTOS) REFERENCES medicamentos(ID_MEDICAMENTOS)
);

CREATE TABLE vehiculo (
  ID_VEHICULO INT PRIMARY KEY AUTO_INCREMENT,
  color_vehiculo VARCHAR(255),
  marca_vehiculo VARCHAR(255),
  placa_vehiculo VARCHAR(255),
  tipo_vehiculo VARCHAR(255),
  estado_vehiculo VARCHAR(255),
  PROPIETARIO_USUARIOS INT NOT NULL,
  FOREIGN KEY (PROPIETARIO_USUARIOS) REFERENCES usuarios(ID_USUARIOS)
);

CREATE TABLE domicilio (
  id_domicilio BIGINT PRIMARY KEY AUTO_INCREMENT,
  ubicacion_domicilio VARCHAR(255),
  estado_domicilio VARCHAR(255),
  FECHA_ENTREGA_DOMICILIO DATETIME NOT NULL,
  ID_VEHICULO INT NOT NULL,
  ID_ORDENES INT NOT NULL,
  FORMULA_MEDICA VARCHAR(255) NOT NULL,
  eps_domicilio VARCHAR(255),
  telefono_domicilio VARCHAR(255),
  FOREIGN KEY (ID_VEHICULO) REFERENCES vehiculo(ID_VEHICULO),
  FOREIGN KEY (ID_ORDENES) REFERENCES ordenes(ID_ORDENES) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE privilegios (
  ID_PRIVILEGIOS INT PRIMARY KEY AUTO_INCREMENT,
  DESCRIPCION_PRIVILEGIOS ENUM('SELECT','INSERT','UPDATE','DELETE') NOT NULL
);

CREATE TABLE usuarios_has_privilegios (
  ID_PRIVILEGIO_USUARIO INT PRIMARY KEY AUTO_INCREMENT,
  ID_USUARIOS INT NOT NULL,
  ID_PRIVILEGIOS INT NOT NULL,
  FOREIGN KEY (ID_USUARIOS) REFERENCES usuarios(ID_USUARIOS),
  FOREIGN KEY (ID_PRIVILEGIOS) REFERENCES privilegios(ID_PRIVILEGIOS)
);

CREATE TABLE pqrs (
  id_pqrs BIGINT PRIMARY KEY AUTO_INCREMENT,
  TIPO_SOLICITUD ENUM('Queja','Reclamo','Sugerencia','Peticion') NOT NULL,
  motivo_pqrs VARCHAR(255),
  ID_USUARIOS INT NOT NULL,
  FECHA_PQRS DATETIME NOT NULL,
  tipo_pqrs VARCHAR(255),
  FOREIGN KEY (ID_USUARIOS) REFERENCES usuarios(ID_USUARIOS)
);
